<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE project [
    <!ENTITY common SYSTEM "file:./common.xml">
]>


<project name="ejb30slsb" default="all" basedir="." xmlns:oracle="antlib:oracle" >

    <!-- Import for OC4J ant integration. -->
    <import file="ant-oracle.xml"/>


   <description>
      This demo shows a Simple Stateless EJB with EJB 3.0. This uses deployment descriptors
   </description>

	
	
	<!-- ****************************************************************
         ** Creates and deploys all deployable units for the           **
         ** application.                                               **
         ** ************************************************************* -->
    <target name="all" depends="package-app, deploy" description="Creates and deploys all deployable units for the application">
        <echo message="-----> Creates and deploys all deployable units for the application"/>
    </target>

	
    <target name="oracle-env-check" unless="env.ORACLE_HOME">
        <fail message="ORACLE_HOME environment variables must be set."/>
    </target>
    <target name="java-env-check" unless="env.JAVA_HOME">
        <fail message="JAVA_HOME environment variables must be set."/>
    </target>
	
    <!-- ******************************************************
         ** Initialize all properties relevant to the        **
         ** execution of this how-to demonstration.          **
         ** *************************************************** -->
    <target name="init" depends="common,oracle-env-check,java-env-check" >
        <echo message="-----> Initializing project properties" />
        <echo message="${env.JAVA_HOME}" />
        <echo message="${env.ORACLE_HOME}" />
        <echo message="classpath= ${common.j2ee.class.path}"/>
        <echo message="COMMON CLASS PATH classpath= ${common.class.path}"/>
    	

        <property name="app.name" value="ejb30slsb" />
        <property name="ear.name" value="${app.name}" />
        <property name="web.name" value="${app.name}-web" />
        <property name="ejb.name" value="${app.name}-ejb" />
        <property name="context.root" value="${app.name}" />
        <property name="cli.name" value="${app.name}-client" />
         <property name="cli.class" value="oracle.ejb30.HelloWorldClient" />


        <property name="src.dir" value="./src" />
        <property name="bld.dir" value="./build" />
        <property name="lib.dir" value="./lib" />
        <property name="etc.dir" value="./etc" />
        <property name="log.dir" value="./log" />

        <!-- Web Application -->
        <property name="src.web.dir" value="${src.dir}/web" />
        <property name="src.web.content.dir" value="${src.dir}/web/content" />
        <property name="src.web.java.dir" value="${src.dir}/web/java" />
        <property name="bld.web.dir" value="${bld.dir}/${web.name}" />
        

    	<!-- EJB Application  -->
        <property name="src.ejb.dir" value="${src.dir}/ejb/bean" />
        <property name="src.ejb.cli.dir" value="${src.dir}/ejb/client"/>
        <property name="bld.ejb.dir" value="${bld.dir}/${ejb.name}/bean" />
        <property name="bld.ejb.cli.dir" value="${bld.dir}/${ejb.name}/client" />

     
   
    	
        <!-- Web Services (client & server) -->
        <property name="src.webservice.dir" value="${src.dir}/webservice/server"/>
        <property name="src.webservice.client.dir" value="${src.dir}/webservice/client"/>
        <property name="webservice.client.class" value="[template: client application class]"/>

        <property name="bld.ear.dir" value="${bld.dir}/${ear.name}" />
    	  <property name="bld.cli.dir" value="${bld.dir}/client" />
        <property name="bld.compiler" value="classic" />
        <property name="class.files" value="**/*.class" />
        <property name="bak.files" value="**/*.bak" />

    </target>



    <!-- ******************************************************
         ** Removes the how-to build process artifacts       **
         ** *************************************************** -->
    <target name="clean" depends="init" description="Removes the contents of the 'build', 'lib' and others files">
        <echo message="-----> Removing the contents of the ${bld.dir} and ${lib.dir} directories as well as other miscellaneous files used during the creation of the application"/>
        <delete dir="${bld.dir}"/>
        <delete dir="${lib.dir}"/>
        <delete dir="${log.dir}"/>
        <delete>
            <fileset dir="." includes="${bak.files}" defaultexcludes="no"/>
        </delete>
    </target>



    <!-- ****************************************************************
         ** Sets up required directories and configuration for how-to  **
         ** ************************************************************* -->
    <target name="setup" depends="init">
       <echo message="-----> Creating the required sub-directories" />
        <mkdir dir="${lib.dir}" />
        <mkdir dir="${bld.dir}" />
        <mkdir dir="${log.dir}" />
        <mkdir dir="${bld.ear.dir}" />
        <mkdir dir="${bld.ear.dir}/META-INF" />
        <mkdir dir="${bld.ejb.dir}/META-INF" />
        <mkdir dir="${bld.web.dir}/WEB-INF/classes" />
        <mkdir dir="${bld.ejb.cli.dir}/META-INF" />
    </target>



    <!--                     APPLICATIONS RELATED TARGETS                   -->

    <!-- ****************************************************************
         ** Compile all the source and put them into the web dir  **
         ** ************************************************************* -->
    <target name="compile-web-classes" depends="setup">
        <echo message="-----> Compile Web Classes" />
        <javac  srcdir="${src.web.java.dir}"
                includes="*.java"
                destdir="${bld.web.dir}/WEB-INF/classes"
                debug="on">
            <classpath>
              <pathelement location="${web.dst.dir}/WEB-INF/classes"/>
              <pathelement path="${common.j2ee.class.path}"/>
            </classpath>
        </javac>
    </target>



    <!-- ****************************************************************
         ** Package the Web Application                                **
         ** *************************************************************  -->
    <target name="package-web" depends="web-descriptor">
        <war destfile="${bld.ear.dir}/${web.name}.war" webxml="${etc.dir}/web.xml">
            <fileset dir="${bld.web.dir}" includes="**/*" />
            <fileset dir="${src.web.content.dir}" includes="**/*" />
        </war>
    </target>

    <!-- ****************************************************************
         ** Add OC4J Web Descriptor	                                   **
         ** *************************************************************  -->
	<target name="web-descriptor" depends="setup">
        <echo message="-----> Add OC4J descriptor" />
		<copy todir="${bld.web.dir}/WEB-INF">
			<fileset dir="${etc.dir}" includes="orion-web.xml"/>
		</copy>
	</target>

    <!-- ****************************************************************
         ** Package the EAR File                                       **
         ** *************************************************************  -->
    <target name="build" depends="package-app" description="Package the application in a ear file">
	<echo message="Location of the ear file: ${lib.dir}/${app.name}.ear"  />
    </target>

    <target name="package-app" depends="package-ejb,package-client">
        <ear destfile="${bld.dir}/${app.name}.ear" appxml="${etc.dir}/application.xml">
            <fileset dir="${bld.ear.dir}" includes="*" />
        </ear>
        <copy file="${bld.dir}/${app.name}.ear" todir="${lib.dir}" />
    </target>

    <!-- ****************************************************************
         ** Add OC4J application Descriptor	                                   **
         ** *************************************************************  -->
	<target name="ear-descriptor" depends="setup">
		<copy todir="${bld.web.dir}/WEB-INF">
			<fileset dir="${etc.dir}" includes="orion-application.xml"/>
		</copy>
	</target>


    <!--              DEPLOYMENT/UNDEPLOYMENT RELATED TARGETS             -->

    <!-- ****************************************************************
         ** Deploys the Application to the server.                     **
         ** ************************************************************* -->
    <target name="deploy" depends="setup, deploy-ear" description="Deploys the application to your OC4J instance">
        <echo message="-----> Deployed the application components required by OC4J for the execution of this application"/>
    </target>

    <!-- ****************************************************************
         ** Undeploys the web service from the server.                 **
         ** ************************************************************* -->
    <target name="undeploy" depends="setup,checkoc4javailable, skipdeploy, undeploy-ear" description="Undeploys the application from your OC4J instance">
        <echo message="-----> Undeployed the application components required by OC4J for the execution of this application"/>
    </target>

    <!-- ****************************************************************
         ** Deploys the ear file to the server.                        **
         ** ************************************************************* -->
    <target name="deploy-ear" depends="setup" unless="skip.deploy">
        <echo message="-----> Deploying the application module deployment (ear) file"/>
        <oracle:deploy deployerUri="${deployer.uri}"
            userId="${oc4j.admin.user}"
            password="${oc4j.admin.password}"
            file="${lib.dir}/${app.name}.ear"
            deploymentName="${app.name}"
            logFile="${log.dir}/deploy-ear.log"/>
    </target>


    <!-- ****************************************************************
         ** Undeploys the ear file from the server.                    **
         ** ************************************************************* -->
    <target name="undeploy-ear" depends="setup" unless="skip.deploy">
        <echo message="-----> Undeploying the application module deployment (ear) file"/>
        <oracle:undeploy deployerUri="${deployer.uri}"
            userId="${oc4j.admin.user}"
            password="${oc4j.admin.password}"
            deploymentName="${app.name}"
            logFile="${log.dir}/undeploy-ear.log"/>
    </target>



    <!-- ****************************************************************
         ** Checks if the server is up, if not goes to skip.deploy     **
         ** ************************************************************* -->
    <target name="checkoc4javailable">
        <echo message="------> Checking to see if OC4J is available to deploy to"/>
        <echo message="        If OC4J is not started, please start it now."/>
        <waitfor    checkeveryunit="second"
                    maxwaitunit="second"
                    maxwait="60"
                    checkevery="1"
                    timeoutproperty="skip.deploy" >
            <socket server="${oc4j.host}" port="${oc4j.admin.port}"/>
        </waitfor>
    </target>

    <!-- ****************************************************************
         ** Calles when deployment is skipped, echo messages           **
         ** ************************************************************* -->
    <target name="skipdeploy" if="skip.deploy">
        <echo message="The deployment phase was skipped because the target OC4J is not running"/>
        <echo message="Please start OC4J before executing next time so deployment can take place."/>
    </target>


    <!-- ****************************************************************
         ** Binds the context root for the web service.                **
         ** ************************************************************* -->
    <target name="bind-web-app" depends="setup,deploy-ear" unless="skip.deploy">
        <echo message="-----> Binding the web context for the application"/>
        <oracle:bindWebApp deploymentName="${app.name}"
            deployerUri="${deployer.uri}"
            userId="${oc4j.admin.user}"
            password="${oc4j.admin.password}"
            webModule="${web.name}"
            webSiteName="${oc4j.binding.module}"
            contextRoot="/${context.root}"/>
        <echo message="-----> Access the application using:"/>
        <echo message="    	http://${oc4j.host}:${oc4j.http.port}/${context.root}" />
    </target>



    <!--                    WEB SERVICES RELATED TARGET                   -->

    <!-- ****************************************************************
         ** Compiles the client application classes                    **
         ** ************************************************************* -->
    <target name="cli-classes" depends="setup">
        <echo message="-----> Compiling the application client module source files"/>
        <javac srcdir="${src.webservice.client.dir}"
            destdir="${bld.cli.dir}"
            debug="on">
            <classpath>
                <pathelement path="${common.webservices.class.path}"/>
                <pathelement location="${bld.cli.dir}"/>
            </classpath>
        </javac>
    </target>


    <!-- ****************************************************************
         ** Creates the client proxy source files based on the service **
         ** wsdl (obtained from the deployed service).                 **
         ** ************************************************************* -->
    <target name="cli-setup" depends="setup">
        <echo message="-----> Setting up the application client module"/>
        <oracle:genProxy wsdl="http://${oc4j.host}:${oc4j.http.port}/${app.name}/${app.name}?wsdl"
            output="${src.webservice.client.dir}"
            packageName="bottomup.client.proxy"
            >
            <classpath>
                <pathelement path="${bld.cli.dir}"/>
                <pathelement location="${OC4J_HOME}/webservices/lib/wsa.jar"/>
            </classpath>
        </oracle:genProxy>
    </target>

    <!-- ****************************************************************
         ** Creates the client proxy application                       **
         ** ************************************************************* -->
    <target name="cli-build" depends="cli-setup,cli-classes">
        <echo message="-----> Created the how-to client application"/>
    </target>



    <!--                    WEB SERVICES : Service Side                  -->


    <!-- ****************************************************************
         ** Creates the service files required for exposing the java   **
         ** class as a webservice.                                     **
         ** ************************************************************* -->
    <target name="package-webservice" depends="setup,compile-webservice">
        <echo message="-----> Assembling the webservice"/>
        <oracle:assemble appName="${app.name}"
            serviceName="${app.name}"
            interfaceName="[template: put your interface here]"
            className="[template: put your implementation class here]"
            input="${bld.webservice.dir}"
            output="${out.dir}"
            ear="${lib.dir}/${ear.name}.ear">
            <classpath>
                <pathelement location="${ORACLE_HOME}/webservices/lib/wsa.jar"/>
            </classpath>
        </oracle:assemble>
    </target>




    <!-- ****************************************************************
         ** Compile Web Service Application                            **
         ** ************************************************************* -->
    <target name="compile-webservice" depends="setup">
        <mkdir dir="${bld.webservice.dir}"/>
        <javac srcdir="${src.webservice.dir}"
            destdir="${bld.webservice.dir}"
            debug="on">
            <classpath>
                <pathelement path="${common.webservices.class.path}"/>
            </classpath>
        </javac>
    </target>


    <!--       			EJB RELATED TARGET			-->

    <!-- ****************************************************************
         ** Compile the EJB Classes								       **
         ** ************************************************************* -->
	<target name="compile-ejb-classes" depends="setup" >
        <echo message="-----> Compiling EJBs"/>
		<javac 	srcdir="${src.ejb.dir}"
				destdir="${bld.ejb.dir}"
				debug="on">
		    <classpath>
		      <pathelement path="${common.j2ee.class.path}" />
	              <pathelement location="${bld.ejb.dir}" />
	              <pathelement location="${lib.dir}/${ejb.name}.jar" />
		    </classpath>
		</javac>
	</target>
	

    <!-- ****************************************************************
         ** Add Descriptor										       **
         ** ************************************************************* -->
	<target name="ejb-descriptor" depends="setup">
		<copy todir="${bld.ejb.dir}/META-INF">
			<fileset dir="${etc.dir}" includes="ejb-jar.xml, orion-ejb-jar.xml"/>
		</copy>
	</target>


	<!-- ****************************************************************
         ** Create EJB jar file									       **
         ** ************************************************************* -->
	<target name="package-ejb" depends="compile-ejb-classes,ejb-descriptor">
        <echo message="-----> Create EJB jar file"/>
		<jar jarfile="${bld.ear.dir}/${ejb.name}.jar">
			<fileset dir="${bld.ejb.dir}" includes="**" />
		</jar>
	</target>

<!-- ****************************************************************
         ** Create Client jar file									       **
         ** ************************************************************* -->


<target name="package-client" depends="compile-cli-classes,cli-descriptor">
      <jar jarfile="${lib.dir}/${cli.name}.jar" manifest="${etc.dir}/Manifest.mf">
         <fileset dir="${bld.ejb.cli.dir}" includes="**" />
      </jar>
   </target>



   <target name="compile-cli-classes" depends="setup">
      <javac srcdir="${src.ejb.cli.dir}"
             destdir="${bld.ejb.cli.dir}"
             debug="on">
         <classpath>
            <pathelement path="${common.j2ee.class.path}" />
            <pathelement location="${bld.ejb.cli.dir}" />
            <pathelement location="${bld.ejb.dir}" />            
         </classpath>
      </javac>
   </target>

   <target name="cli-descriptor" depends="setup">
      <copy todir="${bld.ejb.cli.dir}/META-INF">
         <fileset dir="${etc.dir}" includes="application-client.xml,
                                             orion-application-client.xml"
         />
      </copy>
      <copy todir="${bld.ejb.cli.dir}">
         <fileset dir="${etc.dir}" includes="jndi.properties" />
      </copy>
   </target>

<!-- ****************************************************************
         ** Run Client jar file									       **
         ** ************************************************************* -->


 <target name="run-jndi" depends="init">
        <java classname="${cli.class}" fork="yes">
           <arg value="Debu Panda!"/>
            <classpath>
             <pathelement location="${lib.dir}/${cli.name}.jar"/>
             <pathelement location="${bld.ejb.dir}"/>
             <pathelement location="${ORACLE_HOME}/j2ee/home/oc4jclient.jar"/>            
             <pathelement path="${common.j2ee.class.path}"/>
           </classpath>
        </java>
    </target>

<target name="run" depends="init">
        <java classname="oracle.oc4j.appclient.AppClientContainer" fork="yes">
           <arg value="lib/${cli.name}.jar"/>
            <classpath>
             <pathelement location="${lib.dir}/${cli.name}.jar"/>
             <pathelement location="${bld.ejb.dir}"/>
             <pathelement location="${ORACLE_HOME}/j2ee/home/oc4jclient.jar"/>
           </classpath>
        </java>
    </target>


    <!-- ****************************************************************
     ** Packages the how-to for distribution                       **
     ** *************************************************************  -->
    <target name="package-how-to" depends="init, clean">
      <zip destfile="../how-to-ejb30-stateless-ejb.zip">
        <zipfileset dir="." prefix="how-to-ejb30-stateless-ejb" excludes=".svn/**, .settings/**, .classpath, .project"/>
      </zip>
    </target>

</project>
